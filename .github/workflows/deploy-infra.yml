# .github/workflows/deploy-infra.yml

name: Manually Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      # This dropdown lets you choose which environment to target
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

env:
  AWS_REGION: "us-east-2"
  IAM_ROLE_TO_ASSUME: "arn:aws:iam::481509955802:role/githubactions-radulupan-aws-fileshare-plus-role"

permissions:
  id-token: write
  contents: read

jobs:
  # This job generates the Terraform plan
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      # Set the TF_ENV from the manual dropdown input
      TF_ENV: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform -chdir=terraform/environments/${{ env.TF_ENV }} init

      - name: Terraform Plan
        run: terraform -chdir=terraform/environments/${{ env.TF_ENV }} plan -out=tfplan -var-file=${{ env.TF_ENV }}.tfvars

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: terraform/environments/${{ env.TF_ENV }}/tfplan

  # This job applies the plan created above
  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan # This job only runs if the 'plan' job succeeds
    env:
      TF_ENV: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: terraform/environments/${{ env.TF_ENV }}

      - name: Terraform Init
        run: terraform -chdir=terraform/environments/${{ env.TF_ENV }} init

      - name: Terraform Apply
        run: terraform -chdir=terraform/environments/${{ env.TF_ENV }} apply -auto-approve tfplan