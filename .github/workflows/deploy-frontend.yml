# .github/workflows/deploy-frontend.yml

name: Manually Deploy Frontend

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - main

env:
  AWS_REGION: "us-east-2"
  IAM_ROLE_TO_ASSUME: "arn:aws:iam::481509955802:role/githubactions-radulupan-aws-fileshare-plus-role"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    env:
      TARGET_ENV: ${{ github.event.inputs.branch == 'main' && 'prod' || 'dev' }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.IAM_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: 'false'
          
      - name: Fetch Configuration from SSM Parameter Store
        run: |
          echo "Fetching config for ${{ env.TARGET_ENV }} from path /fileshare/${{ env.TARGET_ENV }}"
          PARAMS_JSON=$(aws ssm get-parameters-by-path --path "/fileshare/${{ env.TARGET_ENV }}" --query "Parameters" --output json)
          if [ -z "$PARAMS_JSON" ] || [ "$PARAMS_JSON" == "[]" ]; then
            echo "No parameters found at the specified path."; exit 1;
          fi
          
          echo "Parameters found, processing them..."
          echo "$PARAMS_JSON" | jq -c '.[]' | while read -r param; do
            PARAM_NAME=$(echo "$param" | jq -r '.Name')
            PARAM_VALUE=$(echo "$param" | jq -r '.Value')
            VAR_NAME_LOWER=$(basename "$PARAM_NAME")
            VAR_NAME_UPPER=$(echo "$VAR_NAME_LOWER" | tr '[:lower:]' '[:upper:]')
            echo "Exporting: ${VAR_NAME_UPPER}=${PARAM_VALUE}"
            echo "${VAR_NAME_UPPER}=${PARAM_VALUE}" >> $GITHUB_ENV
          done

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies and build
        run: |
          cd frontend
          npm install
          npx vite build
        env:
          # --- UPDATED: Use VITE_ prefix for all client-side env vars ---
          VITE_AWS_REGION: ${{ env.AWS_REGION }}
          VITE_USER_POOL_ID: ${{ env.USER_POOL_ID }}
          VITE_USER_POOL_CLIENT_ID: ${{ env.USER_POOL_CLIENT_ID }}
          VITE_CLOUDFRONT_CUSTOM_DOMAIN_URL: ${{ env.CLOUDFRONT_CUSTOM_DOMAIN_URL }}
          
      - name: Deploy static site to S3
        run: |
          echo "Deploying to the ${{ env.TARGET_ENV }} environment..."
          aws s3 sync ./frontend/dist s3://${{ env.S3_REACT_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
